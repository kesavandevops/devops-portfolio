name: Deploy Serverless API (Terraform + AWS)

on:
  workflow_dispatch:
  # optional: uncomment to run on pushes to main
  # push:
  #   branches:
  #     - main

jobs:
  deploy:
    name: Terraform CI/CD
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-south-1
      TF_VERSION: 1.9.5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Lambda package
        working-directory: 05-serverless-aws
        run: |
          echo "Packaging Lambda function..."
          chmod +x build.sh || true
          ./build.sh

      - name: Configure AWS credentials (assume role via OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubOIDCRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: 05-serverless-aws/terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: 05-serverless-aws/terraform
        run: terraform validate

      - name: Terraform Plan (create tfplan)
        working-directory: 05-serverless-aws/terraform
        run: |
          terraform plan -var-file="terraform.tfvars" -out=tfplan

      - name: Terraform Show (human-readable plan)
        working-directory: 05-serverless-aws/terraform
        run: terraform show -no-color tfplan

      - name: Terraform Apply (only on main or manual runs)
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        working-directory: 05-serverless-aws/terraform
        run: terraform apply -auto-approve tfplan

      - name: Terraform Outputs (show API endpoint)
        if: success()
        working-directory: 05-serverless-aws/terraform
        run: |
          echo "Terraform outputs:"
          terraform output -json || true
          API_ENDPOINT=$(terraform output -raw api_endpoint 2>/dev/null || true)
          echo "API_ENDPOINT=${API_ENDPOINT}"
          echo "api_endpoint=${API_ENDPOINT}" >> $GITHUB_OUTPUT

      - name: Smoke test API (create + get + delete)
        if: success() && steps.terraform_outputs.outputs.api_endpoint != ''
        run: |
          API="${{ steps.terraform_outputs.outputs.api_endpoint }}"
          echo "Waiting for API to be ready..."
          sleep 15

          echo "Creating test task..."
          curl -sSf -X POST "${API}/task" \
            -H "Content-Type: application/json" \
            -d '{"taskId":"smoke-test","description":"CI Smoke Test"}'

          echo "Retrieving test task..."
          curl -sSf "${API}/task/smoke-test"

          echo "Deleting test task..."
          curl -sSf -X DELETE "${API}/task/smoke-test"

          echo "âœ… Smoke test passed!"
